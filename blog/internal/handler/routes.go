// Code generated by goctl. DO NOT EDIT.
package handler

import (
	"net/http"
	"time"

	tag "blog/internal/handler/tag"
	user "blog/internal/handler/user"
	"blog/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				Method:  http.MethodPost,
				Path:    "/user/login",
				Handler: user.UserLoginHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/rigister",
				Handler: user.UserRigisterHandler(serverCtx),
			},
			{
				Method:  http.MethodPost,
				Path:    "/user/adminRigister",
				Handler: user.AdminRigisterHandler(serverCtx),
			},
		},
		rest.WithPrefix("/v1"),
		rest.WithTimeout(3000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ParseToken, serverCtx.AdminAuth},
			[]rest.Route{
				{
					Method:  http.MethodPut,
					Path:    "/user/updateRole",
					Handler: user.UpdateRoleHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getUserList",
					Handler: user.GetUserListHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/updateIp",
					Handler: user.UpdateIpHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/talk/publishTalk",
					Handler: user.PublishTalkHandler(serverCtx),
				},
				{
					Method:  http.MethodPost,
					Path:    "/talk/getTalkList",
					Handler: user.GetTalkListHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/talk/updateTalk",
					Handler: user.UpdateTalkHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/talk/deleteTalk",
					Handler: user.DeleteTalkHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/talk/revertTalk",
					Handler: user.RevertTalkHandler(serverCtx),
				},
			}...,
		),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1"),
		rest.WithTimeout(3000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ParseToken},
			[]rest.Route{
				{
					Method:  http.MethodPut,
					Path:    "/user/updatePassword",
					Handler: user.UpdatePasswordHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getUserInfoById",
					Handler: user.GetUserInfoByIdHandler(serverCtx),
				},
				{
					Method:  http.MethodPut,
					Path:    "/user/updateUserInfo",
					Handler: user.UpdateUserInfoHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/talklike",
					Handler: user.TalkLikeHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/cancelTalklike",
					Handler: user.CancelTalkLikeHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getblogTalkList",
					Handler: user.GetBlogtTalkListHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/user/getTalkDetail",
					Handler: user.GetTalkDetailHandler(serverCtx),
				},
			}...,
		),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1"),
		rest.WithTimeout(3000*time.Millisecond),
	)

	server.AddRoutes(
		rest.WithMiddlewares(
			[]rest.Middleware{serverCtx.ParseToken, serverCtx.AdminAuth},
			[]rest.Route{
				{
					Method:  http.MethodPost,
					Path:    "/tag/addTag",
					Handler: tag.AddTagHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tag/updateTag",
					Handler: tag.UpdateTagHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tag/deleteTag",
					Handler: tag.DeleteTagHandler(serverCtx),
				},
				{
					Method:  http.MethodGet,
					Path:    "/tag/getTagList",
					Handler: tag.GetTagListHandler(serverCtx),
				},
			}...,
		),
		rest.WithSignature(serverCtx.Config.Signature),
		rest.WithPrefix("/v1"),
		rest.WithTimeout(3000*time.Millisecond),
	)
}
