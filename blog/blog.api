syntax = "v1"

import "resp.api"

//登录
type UserLoginReq{Username string `form:"username"`Password string `form:"password"`}
type UserLoginResp{ Respone   Data map[string]string `json:"data,default="" "`}
//注册
type UserRigisterReq{Username string `form:"username"`Password string `form:"password"`  NickName string `from:"nickName,optional"` QQ int `from:"qq,optional"`}
type UserRigisterResp{Respone}

//修改权限
type UpdateRoleReq{Id string `json:"id"` Role int `json:"role"`}
type UpdateRoleResp{ Respone}
//获取用户列表
type GetUserListReq{ offset int `json:"offset"`  Limit int `json:"limit"`}
type GetUserListResp{Respone Data map [string][]*Userlist `json:"data"`}

//管理员注册
type AdminRigisterReq{Username string `form:"username"`Password string `form:"password"` NickName string `form:"nickName,optional"` QQ int `form:"qq,optional"`}
type AdminRigisterResp{Respone}

//修改密码
type UpdatePasswordReq{ Password string `json:"password"`}
type UpdatePasswordResp{ Respone}

//管理员修改用户ip
type UpdateIpReq{ Id string `json:"id"` Ip string `json:"ip"`}
type UpdateIpResp{ Respone}

//用户获取用户信息
type GetUserInfoByIdReq {
}
type GetUserInfoByIdResp{ Respone  Data map[string]Userlist `json:"data"`}

//用户修改个人信息
type UpdateUserInfoReq{Avatar string `json:"avatar,optional"` nickName string `json:"nickName,optional"` QQ int `json:"qq,optional"`}
type UpdateUserInfoResp{Respone}

//发表说说
type PublishTalkReq{ UserId string `json:"userId"` Content string `json:"content"` Imglist string `json:"imglist"`}
type PublishTalkResp{Respone Data map [string]string `json:"data"`}

//后台获取说说列表
type GetTalkListReq{offset int `json:"offset"`  Limit int `json:"limit"`}
type GetTalkListResp{Respone  Data  map[string][]*TalkList `json:"data"`}

//修改说说
type UpdateTalkReq{  Id string `json:"identity"` Content string `json:"content,optional"` Imglist string `json:"imglist,optional"` status int `json:"status,optional"` Istop int `json:"istop,optional"`}
type UpdateTalkResp{Respone}

//删除说说
type DeleteTalkReq{ Id string `json:"identity"`}
type DeleteTalkResp{Respone}

//恢复说说
type RevertTalkReq{Id string `json:"identity"`}
type RevertTalkResp{Respone}

@server(
	prefix: /v1
	group: user
	timeout: 3s
)

service blog-api {
	//登录
	@handler UserLogin
	post /user/login (UserLoginReq) returns (UserLoginResp)
	//注册
	@handler UserRigister
	post /user/rigister (UserRigisterReq) returns (UserRigisterResp)
	//管理员注册
	@handler AdminRigister
	post /user/adminRigister (AdminRigisterReq) returns (AdminRigisterResp)
}

@server(
	signature: true
	prefix: /v1
	group: user
	timeout: 3s
	middleware: ParseToken,AdminAuth
)

//管理员
service blog-api {
	// 修改用户权限
	@handler UpdateRole
	put /user/updateRole (UpdateRoleReq) returns (UpdateRoleResp)
	//获取用户列表
	@handler GetUserList
	get /user/getUserList (GetUserListReq) returns (GetUserListResp)
	//更新用户ip
	@handler UpdateIp
	put /user/updateIp (UpdateIpReq) returns (UpdateIpResp)
	//发表说说
	@handler PublishTalk
	get /talk/publishTalk (PublishTalkReq) returns (PublishTalkResp)
	//说说列表
	@handler GetTalkList
	post /talk/GetTalkList (GetTalkListReq) returns (GetTalkListResp)
	//修改说说
	@handler UpdateTalk
	put /talk/updateTalk (UpdateTalkReq) returns (UpdateTalkResp)
	//删除说说
	@handler DeleteTalk
	get /talk/deletetalkby (DeleteTalkReq) returns (DeleteTalkResp)
	//恢复说说
	@handler RevertTalk
	get /talk/revertTalk (RevertTalkReq) returns (RevertTalkResp)
}

@server(
	signature: true
	prefix: /v1
	group: user
	timeout: 3s
	middleware: ParseToken
)

service blog-api {
	// 修改密码
	@handler UpdatePassword
	put /user/updatePassword (UpdatePasswordReq) returns (UpdatePasswordResp)
	//根据identity获取用户信息
	@handler GetUserInfoById
	get /user/getUserInfoById (GetUserInfoByIdReq) returns (GetUserInfoByIdResp)
	//修改个人信息
	@handler UpdateUserInfo
	put /user/updateUserInfo (UpdateUserInfoReq) returns (UpdateUserInfoResp)
}